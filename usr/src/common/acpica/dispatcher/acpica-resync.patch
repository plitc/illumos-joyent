This file and its contents are supplied under the terms of the
Common Development and Distribution License ("CDDL"), version 1.0.
You may only use this file in accordance with the terms of version
1.0 of the CDDL.

A full copy of the text of the CDDL should have accompanied this
source.  A copy of the CDDL is also available via the Internet at
http://www.illumos.org/license/CDDL.

Copyright (c) 2018, Joyent, Inc.

---

Files in this directory are used by kernel and user space code.  Things that are
unsupported in the kernel need to be excluded for kernel builds.

diff --git a/usr/src/common/acpica/dispatcher/dscontrol.c b/usr/src/common/acpica/dispatcher/dscontrol.c
index 3509f16..d603619 100644
--- a/usr/src/common/acpica/dispatcher/dscontrol.c
+++ b/usr/src/common/acpica/dispatcher/dscontrol.c
@@ -360,12 +360,14 @@ AcpiDsExecEndControlOp (
 
     case AML_BREAK_POINT_OP:
 
+#ifdef ACPI_DEBUGGER
         AcpiDbSignalBreakPoint (WalkState);
 
         /* Call to the OSL in case OS wants a piece of the action */
 
         Status = AcpiOsSignal (ACPI_SIGNAL_BREAKPOINT,
             "Executed AML Breakpoint opcode");
+#endif
         break;
 
     case AML_BREAK_OP:
diff --git a/usr/src/common/acpica/dispatcher/dsutils.c b/usr/src/common/acpica/dispatcher/dsutils.c
index 66eac34..e294c83 100644
--- a/usr/src/common/acpica/dispatcher/dsutils.c
+++ b/usr/src/common/acpica/dispatcher/dsutils.c
@@ -647,7 +647,9 @@ AcpiDsCreateOperand (
             return_ACPI_STATUS (Status);
         }
 
+#ifdef ACPI_DEBUGGER
         AcpiDbDisplayArgumentObject (ObjDesc, WalkState);
+#endif
     }
     else
     {
@@ -686,8 +688,10 @@ AcpiDsCreateOperand (
             ACPI_DEBUG_PRINT ((ACPI_DB_DISPATCH,
                 "Argument previously created, already stacked\n"));
 
+#ifdef ACPI_DEBUGGER
             AcpiDbDisplayArgumentObject (
                 WalkState->Operands [WalkState->NumOperands - 1], WalkState);
+#endif
 
             /*
              * Use value that was already previously returned
@@ -734,7 +738,9 @@ AcpiDsCreateOperand (
             return_ACPI_STATUS (Status);
         }
 
+#ifdef ACPI_DEBUGGER
         AcpiDbDisplayArgumentObject (ObjDesc, WalkState);
+#endif
     }
 
     return_ACPI_STATUS (AE_OK);
diff --git a/usr/src/common/acpica/dispatcher/dswexec.c b/usr/src/common/acpica/dispatcher/dswexec.c
index 307af60..8408ebf 100644
--- a/usr/src/common/acpica/dispatcher/dswexec.c
+++ b/usr/src/common/acpica/dispatcher/dswexec.c
@@ -193,9 +193,11 @@ Cleanup:
         "Completed a predicate eval=%X Op=%p\n",
         WalkState->ControlState->Common.Value, WalkState->Op));
 
+#ifdef ACPI_DEBUGGER
     /* Break to debugger to display result */
 
     AcpiDbDisplayResultObject (LocalObjDesc, WalkState);
+#endif
 
     /*
      * Delete the predicate result object (we know that
@@ -419,6 +421,7 @@ AcpiDsExecEndOp (
     WalkState->ReturnDesc = NULL;
     WalkState->ResultObj = NULL;
 
+#ifdef ACPI_DEBUGGER
     /* Call debugger for single step support (DEBUG build only) */
 
     Status = AcpiDbSingleStep (WalkState, Op, OpClass);
@@ -426,6 +429,7 @@ AcpiDsExecEndOp (
     {
         return_ACPI_STATUS (Status);
     }
+#endif
 
     /* Decode the Opcode Class */
 
@@ -755,9 +759,11 @@ Cleanup:
 
     if (WalkState->ResultObj)
     {
+#ifdef ACPI_DEBUGGER
         /* Break to debugger to display result */
 
         AcpiDbDisplayResultObject (WalkState->ResultObj,WalkState);
+#endif
 
         /*
          * Delete the result op if and only if:
